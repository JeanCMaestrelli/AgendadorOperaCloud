<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACcqhwSn7AcLaCvHjOMlRM1e38ONmdiCjRTTAAlTk4ADQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACdrRpOnLAbxJalGeZ0dg3qX1oF61lRA+xVSwHrUUcA4FFFAL9QRgB5UEkAIwAA
        AAAAAAAAAAAAAAAAAACZrx0jnK4b2p2vG/95fQ78UUYA+lBFAPpRRQD6UUYA/FFGAP9RRgD/UUYA/lFG
        ANhQRQBZVVUAAwAAAAAAAAAAna0cUZyuG/ycrhv5fIMReUtBAEdQRgBJUEYASVJFAE5RRgBuUUUAtFJG
        APRRRgD/UUYA71FGAF8AAAAAAAAAAJ2uG16crhv/nK4b8p2uGzkAAAAAAAAAAAAAAAAAAAAAAAAAAFU5
        AAlQRQBcUUYA4lFGAP9RRgDfT0YANwAAAACdrhtenK4b/5yuHPGesBw3AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFFGAFhRRgDzUUYA/1BFAKIAAAAAna4bXpyuG/+crhvynrAcNwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABVOQAJUUYAs1FGAP9RRgDpAAAAAJ2uG16crhv/nK4b8p6wHDcAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFVLAH5RRgD/UUYA/gAAAACdrhtenK4b/5yuG/KesBw3AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABpZwqBU0gB/1FGAP4AAAAAna4cW5yuG/+crhvynrAcNwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2yCQOc3YMvFJHAP9RRgDoAAAAAJmqGh6crhu0nK4b756w
        HDcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgAACm64cbmxsCvlQRQD/UkcAnwAAAAAAAAAAlrQeEZ2u
        G16crRkfAAAAAAAAAAAAAAAAAAAAAAAAAACkthIOnrAbcY6bFu1ZUgP/UEUA21BGADMAAAAAm7IXIZuu
        G0KdrRtBnK8bQ56tGkSerRpEnK8bQ52vHEmcrxxvna8bvZqrGvltbQr/UEUA61FGAFgAAAAAmq0dNZyu
        HMycrhv6nK4b+ZyuG/mcrhv5nK4b+ZyuG/mcrhv6na8b/5ipGv91eA3+U0kB0VBGAFCAgAACAAAAAJyu
        HLCcrhvsnK4b6pyuG+qcrhvqnK4b6pyuG+ubrRvsm60b6pOiGN10dwy4VEsAcE9GAB0AAAAAAAAAAAAA
        AACcrBoxm68ZM5uvGTObrxkzm68ZM5uvGTOYrBk0l6ocNpalGTN4eA8iMzMACgAAAAAAAAAAAAAAAAAA
        AAAAAAAA8Z8AAP1HAACvmQAAoPEAANfYAADH+QAA1/AAANf9AADX+QAAl/0AAOf4AADX4AAApgMAAGCX
        AAD9twAAA38AAA==
</value>
  </data>
</root>